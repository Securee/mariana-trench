{
  "model_generators": [
    {
      "find": "methods",
      "where": [
        {
          "constraint": "signature_pattern",
          "pattern": "Lcom/facebook/marianatrench/integrationtests/Dictionary;\\.setIndex:\\(Ljava/lang/String;Ljava/lang/Object;\\)V"
        }
      ],
      "model": {
        "modes": [
          "no-collapse-on-propagation",
          "skip-analysis",
          "strong-write-on-propagation"
        ],
        "propagation": [
          {
            "input": "Argument(2)",
            "output": "Argument(0)[<Argument(1)>]"
          }
        ]
      }
    },
    {
      "find": "methods",
      "where": [
        {
          "constraint": "signature_pattern",
          "pattern": "Lcom/facebook/marianatrench/integrationtests/Dictionary;\\.putExtra:\\(Ljava/lang/String;Ljava/lang/Object;\\).*"
        }
      ],
      "model": {
        "modes": [
          "no-collapse-on-propagation",
          "skip-analysis",
          "strong-write-on-propagation",
          "alias-memory-location-on-invoke"
        ],
        "propagation": [
          {
            "input": "Argument(2)",
            "output": "Argument(0)[<Argument(1)>]"
          }
        ]
      }
    },
    {
      "find": "methods",
      "where": [
        {
          "constraint": "signature_pattern",
          "pattern": "Lcom/facebook/marianatrench/integrationtests/Dictionary;\\.getIndex:\\(Ljava/lang/String;\\)Ljava/lang/Object;"
        }
      ],
      "model": {
        "modes": [
          "no-collapse-on-propagation",
          "skip-analysis"
        ],
        "propagation": [
          {
            "input": "Argument(0)[<Argument(1)>]",
            "output": "Return"
          }
        ]
      }
    },
    {
      "find": "methods",
      "where": [
        {
          "constraint": "signature_pattern",
          "pattern": ".*\\.sinkIndex:.*"
        }
      ],
      "model": {
        "modes": [
          "skip-analysis"
        ],
        "sinks": [
          {
            "kind": "Sink",
            "port": "Argument(0)[<Argument(1)>]",
            "via_value_of": [
              {
                "port": "Argument(1)"
              }
            ]
          }
        ]
      }
    }
  ]
}
